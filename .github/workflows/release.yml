name: Release (publish package to GAR)

on:
  push:
    tags: [ "v*" ]

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5 # checkout code
      - uses: astral-sh/setup-uv@v5 # uv setup
      - run: uv sync --locked --all-extras --dev
      - run: uvx ruff format .
      - run: uvx ruff check --fix .
      - run: uv run pytest -v --durations=0

  publish:
    needs: [quality]
    runs-on: ubuntu-latest
    
    # Grant permissions for OIDC token
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:
      - uses: actions/checkout@v5
      - uses: astral-sh/setup-uv@v5
      
      # Load GCP/GAR vars from config-dev.env (edit to config-pro.env when needed)
      - name: Load config
        run: |
          set -a
          source config-dev.env
          set +a
          echo "PROJECT_ID=$PROJECT_ID" >> $GITHUB_ENV
          echo "PROJECT_NUMBER=$PROJECT_NUMBER" >> $GITHUB_ENV
          echo "GAR_LOCATION=$GAR_LOCATION" >> $GITHUB_ENV
          echo "REPOSITORY=$REPOSITORY" >> $GITHUB_ENV
          echo "CI_SA=$CI_SA" >> $GITHUB_ENV
          echo "GAR_PUBLISH_URL=https://${GAR_LOCATION}-python.pkg.dev/${PROJECT_ID}/${REPOSITORY}/" >> $GITHUB_ENV

      - name: Set WIF variables
        run: |
          echo "WIF_PROVIDER=projects/$PROJECT_NUMBER/locations/global/workloadIdentityPools/github-pool/providers/github-provider" >> $GITHUB_ENV
          echo "WIF_SERVICE_ACCOUNT=${CI_SA}@${PROJECT_ID}.iam.gserviceaccount.com" >> $GITHUB_ENV

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          workload_identity_provider: ${{ env.WIF_PROVIDER }}
          service_account: ${{ env.WIF_SERVICE_ACCOUNT }}
          token_format: access_token

      - name: Build package
        run: uv build
      
      - name: Publish to GAR
        env:
          UV_PUBLISH_USERNAME: oauth2accesstoken
          UV_PUBLISH_PASSWORD: ${{ steps.auth.outputs.access_token }}
        run: |
          uv publish --index tradelab-pypi